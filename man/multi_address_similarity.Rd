% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/address_similarity_func.R
\name{multi_address_similarity}
\alias{multi_address_similarity}
\alias{address_similarity}
\title{Address similarity}
\usage{
multi_address_similarity(dat, x_list = NULL, ID = NULL,
  ex_cols = NULL, method = "cos", engine = NULL, quick_seg = TRUE)

address_similarity(add_list, method = "cos", engine = NULL,
  quick_seg = TRUE)
}
\arguments{
\item{dat}{data.frame contains address variables.}

\item{x_list}{Names of addresses.}

\item{ID}{The name of ID of observations. Default is NULL.}

\item{ex_cols}{A list of excluded variables. Regular expressions can also be used to match
variable names. Default is NULL.}

\item{method}{.jaccard similarity or cos similarity,Default is "cos".}

\item{engine}{Words segment engine of jiebar packages.}

\item{quick_seg}{Logical,quick segmentation of sentence.Default is TRUE.}

\item{add_list}{A list of addresses.}
}
\value{
A data.frame with similarities of all observations.
}
\description{
\code{address_similarity} is used for computing jaccard and cos similarity between addresses.
\code{multi_address_similarity} is used for computing jaccard and cos similarity between multiple addresses.
}
\examples{
data(dict_add_cn)
x = paste(substr(dict_add_cn[[1]][1],1,2),substr(dict_add_cn[[1]][2],1,2),
substr(dict_add_cn[[1]][3],1,3),substr(dict_add_cn[[1]][4],1,3))
y= paste(substr(dict_add_cn[[1]][1],1,2),substr(dict_add_cn[[1]][2],1,2),
substr(dict_add_cn[[1]][3],1,3),substr(dict_add_cn[[1]][5],1,3))
z = paste(substr(dict_add_cn[[1]][1],1,2),substr(dict_add_cn[[1]][2],1,2),
substr(dict_add_cn[[1]][3],1,3),substr(dict_add_cn[[1]][7],1,3))
multi_address_similarity(data.frame(x=x,y=y,z = z), method = 'jaccard')
}
